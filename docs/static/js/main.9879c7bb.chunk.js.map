{"version":3,"sources":["components/AddCategory.js","helpers/getFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgs","placeholder","value","onChange","target","getFetchGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,YAAc,SACdC,MAAUT,EACVU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAY,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAET,mCACP,GACRC,EAJwB,iDAIwBC,UAAUH,GAJlC,kBAGhB,GAHgB,oBAET,oCAFS,SAMLI,MAAMF,GAND,cAMlBG,EANkB,gBAQDA,EAAKC,OARJ,uBAQhBC,EARgB,EAQhBA,KAEFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAChC,MAAO,CACHF,KACAC,QAEAT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QAfd,kBAmBjBM,GAnBiB,4CAAH,sDCEZM,EAAc,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOT,EAAV,EAAUA,IAAV,OAEnB,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEtB,ECDwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAEPvB,EAAaC,GAEZuB,MAAK,SAAAC,GAEFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAKlB,CAACnB,IAEGoB,EDrBmBK,CAAazB,GAA/BO,EAAR,EAAQA,KAAOY,EAAf,EAAeA,QAEf,OACI,qCACI,6BAAMnB,IAEJmB,GAAW,cAEb,qBAAKJ,UAAU,YAAf,SAEQR,EAAKE,KAAI,SAAAiB,GAAG,OACR,6BACI,cAAC,EAAD,eAAkBA,KADZA,EAAIhB,aEbzBiB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCbjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9879c7bb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [ inputValue, setInputValue ] = useState('');\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>  {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 1 ) {\r\n            setCategories(catgs => [inputValue, ...catgs]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input\r\n                placeholder = 'Buscar'\r\n                value = { inputValue }\r\n                onChange = { handleInputValue }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getFetchGifs = async (category) => {\r\n\r\n    const apiKey = 'cD7tPYIMGAaxvCi3ESVNUoH7DMs6S5QJ',\r\n    limit = 10,\r\n    url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${apiKey}`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(({ id, title, images }) => {\r\n        return {\r\n            id,\r\n            title,\r\n            // El operador \"?\" es para verificar que si images es correcto, entonces la utilize\r\n            url: images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => \r\n    (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data , loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>        \r\n            <h3>{ category }</h3>\r\n\r\n            { loading && \"cargando...\" }\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    data.map(img => (\r\n                        <li key={ img.id }>\r\n                            <GifGridItem { ...img } />\r\n                        </li>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getFetchGifs } from \"../helpers/getFetchGifs\";\r\n\r\n// Esto es un customHooks\r\n// Funcionan como si fuera un: funcionalComponent\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getFetchGifs(category)\r\n        \r\n        .then(imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n\r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories } />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}